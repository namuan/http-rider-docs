[{"body":"HttpRider stores all the request/response (Http exchange) made for an API. You can find it in the top right corner of the window. Due to space limitation, you can only view the last 10 exchanges but clicking on any of the previous exchange button.\nHere is a quick demo of working with Http exchange history.\n","excerpt":"HttpRider stores all the request/response (Http exchange) made for an API. You can find it in the …","ref":"/http-rider-docs/docs/how-tos/005_http-exchanges/","title":"How to navigate between HTTP requests history"},{"body":"","excerpt":"","ref":"/http-rider-docs/docs/getting-started/","title":"Getting Started"},{"body":"In HttpRider, you can create and save new project workspaces. When you start up HttpRider for the first time, it\u0026rsquo;ll automatically create a temporary project file.\nTo save a project, click on File -\u0026gt; Save or press keyboard shortcut Ctrl/Cmd + S.\nTo open an existing project, click on File -\u0026gt; Open or press keyboard shortcut Ctrl/Cmd + O.\nYou can also save a copy of the currently opened project by using File -\u0026gt; Save As and give a different project name.\n","excerpt":"In HttpRider, you can create and save new project workspaces. When you start up HttpRider for the …","ref":"/http-rider-docs/docs/how-tos/010_project-workspaces/","title":"How to work with projects"},{"body":"In this section, we\u0026rsquo;ll look at environment variables and how you can use them in API requests. Here are the two options in the toolbar which deals with configuring environments and switching between environments.\nWhen you click on the button to configure environment, it\u0026rsquo;ll open up a dialog box with all the configured environments.\nPlease note that pressing ESC will close the environments dialog.\nCreating a new environment : Click on the button to configure environments. If there are no environments configured then it\u0026rsquo;ll create a new \u0026lsquo;Default\u0026rsquo; environment with a single environment variable. You can also click on the + button to add a new environment. The environment name is auto-generated but you can double click on the name to change it.\n#### Copying an existing environment:\nClick on the ++ button to copy an existing environment along with all the environment variables.\n#### Deleting an environment:\nClick on the - button to delete an existing environment.\nSwitching between environments: A new environment can be selected from the main screen.\nUsing environment variables: An environment variable can be used in setting up the endpoint, any header or query param value or even in the request body. You can also define a dynamic enviornment variable whose value changes between each request. This is useful to define a random variable.\nPress Ctrl/Cmd + G or press $ whereever you\u0026rsquo;d like to insert the value of the environment variable. This key combination opens up a text box which will auto filter environment variables as soon as you start typing. Once the environment variable is selected, press Enter to insert the variable.\n","excerpt":"In this section, we\u0026rsquo;ll look at environment variables and how you can use them in API requests. …","ref":"/http-rider-docs/docs/how-tos/015_environment-variables/","title":"How to work with environment variables"},{"body":"","excerpt":"","ref":"/http-rider-docs/docs/","title":"Documentation"},{"body":"HttpRider provides an easy way to add Fake generated data in your API requests. It uses the excellent Faker library to generate fake data. Fake data can be inserted in the request header, query params, form params or body as part of JSON request.\nYou can either press $ and then type data which should open up the Fake data dialog.\nAnother way is to right click and select Fake Data from the list.\nCurrently, you can generate fake data for some common elements with support for more options is in the roadmap. When selected, it\u0026rsquo;ll insert a function in-place to generate the dynamic value on each request.\n","excerpt":"HttpRider provides an easy way to add Fake generated data in your API requests. It uses the …","ref":"/http-rider-docs/docs/how-tos/020_fake-data/","title":"How to work with variables with fake data variables"},{"body":"Please make sure that you go through the Quick Start section as the following items will assume familiarity with making API requests using HttpRider.\n","excerpt":"Please make sure that you go through the Quick Start section as the following items will assume …","ref":"/http-rider-docs/docs/how-tos/","title":"How Tos"},{"body":"#### How it works?\nRunning multiple APIs Disable APIs Extracting variables from API request Using variables to chain APIs ","excerpt":"#### How it works?\nRunning multiple APIs Disable APIs Extracting variables from API request Using …","ref":"/http-rider-docs/docs/how-tos/025_api_request_chaining/","title":"How to work with API request chaining"},{"body":"Select the API request and Press Ctrl/Cmd + E or the export button on the toolbar to open up the code generator dialog.\nSome of the code generators rely on the response so please make sure that you have successfully run an API. If the backend service is not ready then you can use Mocked Response to generate a fake response.\nThe code generator dialog will generate code for the selected item but you can easily change it.\nCopy button will copy the code to the clipboard. Export button will export the code to a file.\nIt is also possible to export multiple APIs by pressing Shift + Ctrl/Cmd + E or the following button on the toolbar.\n","excerpt":"Select the API request and Press Ctrl/Cmd + E or the export button on the toolbar to open up the …","ref":"/http-rider-docs/docs/generators/","title":"Code Generators"},{"body":"Labelling APIs Filtering APIs by Label Added Label description Run APIs by Label ","excerpt":"Labelling APIs Filtering APIs by Label Added Label description Run APIs by Label ","ref":"/http-rider-docs/docs/how-tos/030_api_request_labelling/","title":"How do you group API(s) using labels"},{"body":"How it works? #### Assertions Dialog reference\n#### Extracting and naming variables\nUsing variables Adding custom JsonPath expressions ","excerpt":"How it works? #### Assertions Dialog reference\n#### Extracting and naming variables\nUsing variables …","ref":"/http-rider-docs/docs/how-tos/035_api_assertions/","title":"How to test APIs with assertions"},{"body":"How it works? Creating a simple mock response Using variables in mocked responses Dynamic mocks using request variables ","excerpt":"How it works? Creating a simple mock response Using variables in mocked responses Dynamic mocks …","ref":"/http-rider-docs/docs/how-tos/040_mocking_apis/","title":"How do you define mock API responses"},{"body":"#### How it works?\nTesting an API ","excerpt":"#### How it works?\nTesting an API ","ref":"/http-rider-docs/docs/how-tos/045_fuzz_test_apis/","title":"How to do fuzz testing"},{"body":"You can share the API request/response data by creating a unique link using the PrintShare service.\nHere is a quick demo of how the feature works.\nPlease see here if you want to run the server. Once running, you can configure the server in the configuration.\n","excerpt":"You can share the API request/response data by creating a unique link using the PrintShare service. …","ref":"/http-rider-docs/docs/how-tos/050_sharing_api_exchange/","title":"How do you share API request/responses"},{"body":"MacOSX Download and install the latest release from\nMac OS App\nAs the application is not available on AppStore, you may have to manually accept that you\u0026rsquo;d like to open this app.\nGo to Mac Preferences\nAnd click \u0026ldquo;Open Anyway\u0026rdquo;\nWindows Windows App\nLinux It is easy to setup HttpRider from source. Make you that you have Python3+ installed on your machine.\nDownload latest release\n$ cd http-rider-master # Unzipped folder name $ python3 --version # To validate python installation $ make setup $ make run ","excerpt":"MacOSX Download and install the latest release from\nMac OS App\nAs the application is not available …","ref":"/http-rider-docs/docs/getting-started/installation/","title":"Installation"},{"body":" ","excerpt":" ","ref":"/http-rider-docs/docs/getting-started/quick-start/","title":"Quick Start"},{"body":"The configuration dialog is opened by clicking the icon on the top right corner of the window.\nOnce clicked, it\u0026rsquo;ll open up the configuration dialog.\nRequests Timeout (secs)\nNumber of seconds HttpRider waits for the response before timing out and closing the connection.\nFollow Redirects\nIf checked, HttpRider will automatically follow if the server returns an HTTP status of 301 or 302 or 307. In case of either of these HTTP statuses, the response location header contains the link to follow.\nIf the configuration is checked, HttpRider will only display the last request in the Http exchange view.\nHTTP Proxy If configured, HttpRider will use the available proxy to send the request. Sometimes, it is not possible to configure SSL with the proxy so you can disable verification if required.\nUpdates Checks if a new version of HttpRider is available on start up. If a new version is available then you\u0026rsquo;ll see an option to download the new version on the main window.\nPrint/Share Configures the server to use when sharing API request/responses. Please check here for more details.\n","excerpt":"The configuration dialog is opened by clicking the icon on the top right corner of the window.\nOnce …","ref":"/http-rider-docs/docs/getting-started/configuration/","title":"Configuration Reference"},{"body":" Few Important Shortcuts\nCtrl/Cmd + I : Insert environment or other variables in a request.\nCtrl/Cmd + Enter : Sends currently select request\nCtrl/Cmd + S : Saves the project\nWorking with Projects Shortcut Description Ctrl/Cmd + N New Project Ctrl/Cmd + O Open Project Ctrl/Cmd + S Save Project Running and Exporting Request(s) Shortcut Description Ctrl/Cmd + Enter Send Request Shift + Ctrl/Cmd + Enter Send All Requests Ctrl/Cmd + E Export Request Short + Ctrl/Cmd + E Export All Requests Working with HTTP Request Shortcut Description Ctrl/Cmd + I Insert Variable Ctrl/Cmd + M Select HTTP Method Ctrl/Cmd + L Select HTTP URL Alt + D Select Description Tab Alt + H Select Headers Tab Alt + Q Select Queries Tab Alt + F Select Form Params Tab Alt + B Select Request Body Tab Alt + M Select Mocked Response Tab ","excerpt":" Few Important Shortcuts\nCtrl/Cmd + I : Insert environment or other variables in a request.\nCtrl/Cmd …","ref":"/http-rider-docs/docs/getting-started/shortcuts/","title":"Shortcuts Reference"},{"body":" Simple and Powerful Cross-Platform Desktop API Client. Alternative to Postman, Paw. Learn More Download ","excerpt":" Simple and Powerful Cross-Platform Desktop API Client. Alternative to Postman, Paw. Learn More …","ref":"/http-rider-docs/","title":"HttpRider"}]